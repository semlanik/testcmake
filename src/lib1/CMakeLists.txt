cmake_minimum_required(VERSION 3.1)

include(GNUInstallDirs)
project(lib1 VERSION 1.0.0)

set(TARGET lib1)
set(TARGET_EXPORT ${TARGET}Targets)
set(TARGET_CONFIG ${TARGET}Config)

set(TARGET_INCLUDE_DIR ${CMAKE_INSTALL_INCLUDEDIR}/${TARGET})
set(TARGET_LIB_DIR ${CMAKE_INSTALL_LIBDIR})
set(TARGET_CMAKE_DIR ${CMAKE_INSTALL_LIBDIR}/cmake/${TARGET})

set(HEADERS ${TARGET}.h)

add_library(${TARGET} SHARED ${TARGET}.cpp)
add_library(${TARGET}::${TARGET} ALIAS ${TARGET})

target_include_directories(${TARGET} PUBLIC $<INSTALL_INTERFACE:${TARGET_INCLUDE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
set_target_properties(${TARGET} PROPERTIES VERSION ${PROJECT_VERSION} PUBLIC_HEADER "${HEADERS}")

install(TARGETS ${TARGET}
    EXPORT ${TARGET_EXPORT}
    PUBLIC_HEADER DESTINATION ${TARGET_INCLUDE_DIR}
    LIBRARY DESTINATION ${TARGET_LIB_DIR})
install(EXPORT ${TARGET_EXPORT} FILE ${TARGET_EXPORT}.cmake NAMESPACE ${TARGET}::  DESTINATION ${TARGET_CMAKE_DIR})

include(CMakePackageConfigHelpers)
configure_package_config_file(
    "${TARGET_CONFIG}.cmake.in" "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_CMAKE_DIR}/${TARGET_CONFIG}.cmake"
    INSTALL_DESTINATION "${TARGET_CMAKE_DIR}")
configure_package_config_file(
    "${TARGET_CONFIG}Tree.cmake.in" "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_CONFIG}.cmake"
    INSTALL_DESTINATION "${TARGET_CMAKE_DIR}")

install(FILES "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_CMAKE_DIR}/${TARGET_CONFIG}.cmake" DESTINATION ${TARGET_CMAKE_DIR})

export(TARGETS ${TARGET} NAMESPACE ${TARGET}:: FILE ${TARGET_EXPORT}.cmake)
export(PACKAGE ${TARGET})
